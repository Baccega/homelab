services:
  # plex:
  #   image: ghcr.io/linuxserver/plex
  #   container_name: plex
  #   environment:
  #     - PUID=1050
  #     - PGID=100
  #     - TZ=Europe/Vienna
  #     - VERSION=docker
  #   ports:
  #     - 32400:32400
  #     - 1900:1900/udp
  #     - 5353:5353/udp
  #     - 8324:8324
  #     - 32410:32410/udp
  #     - 32412:32412/udp
  #     - 32413:32413/udp
  #     - 32414:32414/udp
  #     - 32469:32469
  #   volumes:
  #     - /home/sandro/plex:/config
  #     - /mnt/tv_shows:/tv
  #     - /mnt/movies:/movies
  #     - /mnt/videocassette:/videocassette
  #   devices:
  #     - /dev/dri:/dev/dri # For GPU access
  #   networks:
  #     - default
  #   restart: unless-stopped

  # sonarr:
  #   image: ghcr.io/linuxserver/sonarr
  #   container_name: sonarr
  #   environment:
  #     - PUID=1050
  #     - PGID=100
  #     - TZ=Europe/Vienna
  #   volumes:
  #     - /home/sandro/sonarr:/config
  #     - /mnt/tv_shows:/tv
  #     - /mnt/downloads:/downloads
  #   networks:
  #     - default
  #   ports:
  #     - 8989:8989
  #   restart: unless-stopped

  # radarr:
  #   image: ghcr.io/linuxserver/radarr
  #   container_name: radarr
  #   environment:
  #     - PUID=1050
  #     - PGID=100
  #     - TZ=Europe/Vienna
  #   volumes:
  #     - /home/sandro/radarr:/config
  #     - /mnt/movies:/movies
  #     - /mnt/downloads:/downloads
  #   networks:
  #     - default
  #   ports:
  #     - 7878:7878
  #   restart: unless-stopped

  # prowlarr:
  #   image: lscr.io/linuxserver/prowlarr:latest
  #   container_name: prowlarr
  #   environment:
  #     - PUID=1050
  #     - PGID=100
  #     - TZ=Europe/Vienna
  #   volumes:
  #     - /home/sandro/prowlarr/data:/config
  #   ports:
  #     - 9696:9696
  #   restart: unless-stopped
  #   depends_on:
  #     - forward-proxy

  qbittorrent:
    image: ghcr.io/linuxserver/qbittorrent
    container_name: qbittorrent
    environment:
      - PUID=1050
      - PGID=100
      - TZ=Europe/Vienna
      - WEBUI_PORT=8080
    volumes:
      - /home/sandro/qbittorrent:/config
      - /mnt/downloads:/downloads
    networks:
      - default
    ports:
      - 6881:6881
      - 6881:6881/udp
      - 8080:8080
    restart: unless-stopped
    depends_on:
      - forward-proxy

  sabnzbd:
    image: lscr.io/linuxserver/sabnzbd:latest
    container_name: sabnzbd
    environment:
      - PUID=1050
      - PGID=100
      - TZ=Europe/Vienna
    volumes:
      - /home/sandro/sabnzbd:/config
      - /mnt/downloads:/config/downloads/complete
    ports:
      - 8081:8080
    restart: unless-stopped
    networks:
      - default
    depends_on:
      - forward-proxy

  forward-proxy:
    image: ghcr.io/wfg/openvpn-client:2.1.1
    container_name: forward-proxy
    dns:
      - ${DNS_PRIMARY}
      - ${DNS_SECONDARY}
    cap_add:
      - NET_ADMIN
    devices:
      - /dev/net/tun
    environment:
      - KILL_SWITCH=on
      - SUBNETS=192.168.1.1/24
      - SOCKS_PROXY=on
      - VPN_CONFIG_FILE=ch-zur.prod.surfshark.comsurfshark_openvpn_udp.ovpn
    ports:
      - 1080:1080
    volumes:
      - /home/sandro/vpn:/data/vpn
    restart: unless-stopped
    networks:
      - default

  # heimdall:
  #   image: ghcr.io/linuxserver/heimdall
  #   container_name: heimdall
  #   environment:
  #     - PUID=1000
  #     - PGID=1000
  #     - TZ=Europe/Vienna
  #   volumes:
  #     - /home/sandro/heimdall:/config
  #   networks:
  #     - default
  #   ports:
  #     - 10080:80
  #     - 10443:443
  #   restart: unless-stopped

  # cloudflared:
  #   image: cloudflare/cloudflared:2023.8.2
  #   container_name: cloudflared
  #   command: tunnel --no-autoupdate run --token $CLOUDFLARE_TOKEN
  #   restart: always
  #   network_mode: host

  # homeassistant:
  #   image: lscr.io/linuxserver/homeassistant:latest
  #   container_name: homeassistant
  #   network_mode: host
  #   environment:
  #     - PUID=1000
  #     - PGID=1000
  #     - TZ=Europe/Vienna
  #   volumes:
  #     - /home/sandro/vscode/workspace/homeassistant:/config
  #   ports:
  #     - 8123:8123
  #   restart: unless-stopped

  # pihole:
  #   container_name: pihole
  #   image: pihole/pihole:latest
  #   ports:
  #     # DNS Ports
  #     - 53:53/tcp
  #     - 53:53/udp
  #     # Default HTTP Port
  #     - 2080:80/tcp
  #     # Default HTTPs Port. FTL will generate a self-signed certificate
  #     - 2443:443/tcp
  #     # Uncomment the line below if you are using Pi-hole as your DHCP server
  #     #- 67:67/udp
  #     # Uncomment the line below if you are using Pi-hole as your NTP server
  #     #- 123:123/udp
  #   environment:
  #     TZ: Europe/Vienna
  #     # Set a password to access the web interface. Not setting one will result in a random password being assigned
  #     FTLCONF_webserver_api_password: $PIHOLE_PASSWORD
  #     # If using Docker's default `bridge` network setting the dns listening mode should be set to 'all'
  #     FTLCONF_dns_listeningMode: all
  #   # Volumes store your data between container upgrades
  #   volumes:
  #     # For persisting Pi-hole's databases and common configuration file
  #     - ./pihole:/etc/pihole
  #   cap_add:
  #     # See https://github.com/pi-hole/docker-pi-hole#note-on-capabilities
  #     # Required if you are using Pi-hole as your DHCP server, else not needed
  #     - NET_ADMIN
  #     # Required if you are using Pi-hole as your NTP client to be able to set the host's system time
  #     - SYS_TIME
  #     # Optional, if Pi-hole should get some more processing time
  #     - SYS_NICE
  #   restart: unless-stopped
